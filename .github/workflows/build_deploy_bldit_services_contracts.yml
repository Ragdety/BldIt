name: Build and deploy BldIt Contracts

on:
  push:
    branches:
      - main
    paths:
      - 'src/services/builds/BldIt.Builds.Contracts/**'
      - 'src/services/identity/BldIt.Identity.Contracts/**'
      - 'src/services/jobs/BldIt.Jobs.Contracts/**'
      - 'src/services/projects/BldIt.Projects.Contracts/**'

env:
  ARTIFACTORY_NAME: BldItNuGetArtifactory
  PACKAGE_VERSION: 1.0.${{ github.run_number }}-alpha
  PYTHON_SCRIPTS: 'src/ci-cd/scripts/actions'
  BLDIT_CONTRACT_ARTIFACTS: './bldit_contract_artifacts'

jobs:
  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Identify changed files
        run: python $PYTHON_SCRIPTS/set_bldit_contracts_to_build.py

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          
      - name: Build Builds.Contracts
        if: ${{ env.BUILDS == 'true' }}
        run: dotnet build $BUILDS_PROJECT --configuration Release
        
      - name: Build Identity.Contracts
        if: ${{ env.IDENTITY == 'true' }}
        run: dotnet build $IDENTITY_PROJECT --configuration Release
        
      - name: Build Jobs.Contracts
        if: ${{ env.JOBS == 'true' }}
        run: dotnet build $JOBS_PROJECT --configuration Release
        
      - name: Build Projects.Contracts
        if: ${{ env.PROJECTS == 'true' }}
        run: dotnet build $PROJECTS_PROJECT --configuration Release
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Identify changed files
        run: python $PYTHON_SCRIPTS/set_bldit_contracts_to_build.py

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: 5.x

      - name: Add Artifactory NuGet Source
        run: |
          echo "Adding artifactory"
          nuget sources Add \
          -Name $ARTIFACTORY_NAME \
          -Source ${{ secrets.ARTIFACTORY_NUGET_URL }} \
          -username ${{ secrets.ARTIFACTORY_NUGET_USERNAME }} \
          -password "${{ secrets.ARTIFACTORY_NUGET_PASSWORD }}"

      - name: Authenticate NuGet Artifactory
        run: |
          echo "Authenticating with artifactory"
          nuget setapikey ${{ secrets.ARTIFACTORY_NUGET_API_KEY }} -Source $ARTIFACTORY_NAME

      - name: Pack Builds.Contracts
        if: ${{ env.BUILDS == 'true' }}
        run: dotnet pack $BUILDS_PROJECT --configuration Release --output $BLDIT_CONTRACT_ARTIFACTS -p:PackageVersion=$PACKAGE_VERSION
      
      - name: Pack Identity.Contracts
        if: ${{ env.IDENTITY == 'true' }}
        run: dotnet pack $IDENTITY_PROJECT --configuration Release --output $BLDIT_CONTRACT_ARTIFACTS -p:PackageVersion=$PACKAGE_VERSION
        
      - name: Pack Jobs.Contracts
        if: ${{ env.JOBS == 'true' }}
        run: dotnet pack $JOBS_PROJECT --configuration Release --output $BLDIT_CONTRACT_ARTIFACTS -p:PackageVersion=$PACKAGE_VERSION
        
      - name: Pack Projects.Contracts
        if: ${{ env.PROJECTS == 'true' }}
        run: dotnet pack $PROJECTS_PROJECT --configuration Release --output $BLDIT_CONTRACT_ARTIFACTS -p:PackageVersion=$PACKAGE_VERSION

      - name: Deploy Builds.Contracts to NuGet Artifactory
        if: ${{ env.BUILDS == 'true' }}
        run: |
          echo "Deploying to artifactory"
          nuget push $BLDIT_CONTRACT_ARTIFACTS/BldIt.Builds.Contracts.$PACKAGE_VERSION.nupkg \
          -Source $ARTIFACTORY_NAME \
          -ApiKey ${{ secrets.ARTIFACTORY_NUGET_API_KEY }} 
      
      - name: Deploy Identity.Contracts to NuGet Artifactory
        if: ${{ env.IDENTITY == 'true' }}
        run: |
          echo "Deploying to artifactory"
          nuget push $BLDIT_CONTRACT_ARTIFACTS/BldIt.Identity.Contracts.$PACKAGE_VERSION.nupkg \
          -Source $ARTIFACTORY_NAME \
          -ApiKey ${{ secrets.ARTIFACTORY_NUGET_API_KEY }}
          
      - name: Deploy Jobs.Contracts to NuGet Artifactory
        if: ${{ env.JOBS == 'true' }}
        run: |
          echo "Deploying to artifactory"
          nuget push $BLDIT_CONTRACT_ARTIFACTS/BldIt.Jobs.Contracts.$PACKAGE_VERSION.nupkg \
          -Source $ARTIFACTORY_NAME \
          -ApiKey ${{ secrets.ARTIFACTORY_NUGET_API_KEY }}
      
      - name: Deploy Projects.Contracts to NuGet Artifactory
        if: ${{ env.PROJECTS == 'true' }}
        run: |
          echo "Deploying to artifactory"
          nuget push $BLDIT_CONTRACT_ARTIFACTS/BldIt.Projects.Contracts.$PACKAGE_VERSION.nupkg \
          -Source $ARTIFACTORY_NAME \
          -ApiKey ${{ secrets.ARTIFACTORY_NUGET_API_KEY }}