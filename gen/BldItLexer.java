// Generated from C:/Users/ragde/OneDrive/Desktop/Programming/BldIt/BldIt.Lang/Grammar\BldItLexer.g4 by ANTLR 4.10.1

using BldIt.Lang.External.AntlrDenter;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BldItLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INDENT=1, DEDENT=2, WHILE=3, ADD_OP=4, SUB_OP=5, MULT_OP=6, DIV_OP=7, 
		MOD_OP=8, BOOL_OP=9, GREATER_THAN_OP=10, LESS_THAN_OP=11, GREATER_THAN_EQUAL_OP=12, 
		LESS_THAN_EQUAL_OP=13, OPEN_PAREN=14, CLOSE_PAREN=15, COMMA=16, SEMICOLON=17, 
		COLON=18, DOT=19, ASSIGN_OP=20, IF=21, ELSE=22, EQUALITY=23, NOT=24, INTEGER=25, 
		FLOAT=26, STRING=27, BOOL=28, NULL=29, ENDLINE=30, ENDBLOCK=31, WS=32, 
		COMMENT=33, NL=34, IDENTIFIER=35;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"WHILE", "ADD_OP", "SUB_OP", "MULT_OP", "DIV_OP", "MOD_OP", "BOOL_OP", 
			"GREATER_THAN_OP", "LESS_THAN_OP", "GREATER_THAN_EQUAL_OP", "LESS_THAN_EQUAL_OP", 
			"OPEN_PAREN", "CLOSE_PAREN", "COMMA", "SEMICOLON", "COLON", "DOT", "ASSIGN_OP", 
			"IF", "ELSE", "EQUALITY", "NOT", "INTEGER", "FLOAT", "STRING", "BOOL", 
			"NULL", "ENDLINE", "ENDBLOCK", "WS", "COMMENT", "NL", "IDENTIFIER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'while'", "'+'", "'-'", "'*'", "'/'", "'%'", null, 
			"'>'", "'<'", "'>='", "'<='", "'('", "')'", "','", "';'", "':'", "'.'", 
			"'='", "'if'", "'else'", null, null, null, null, null, null, "'null'", 
			null, "'end'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "INDENT", "DEDENT", "WHILE", "ADD_OP", "SUB_OP", "MULT_OP", "DIV_OP", 
			"MOD_OP", "BOOL_OP", "GREATER_THAN_OP", "LESS_THAN_OP", "GREATER_THAN_EQUAL_OP", 
			"LESS_THAN_EQUAL_OP", "OPEN_PAREN", "CLOSE_PAREN", "COMMA", "SEMICOLON", 
			"COLON", "DOT", "ASSIGN_OP", "IF", "ELSE", "EQUALITY", "NOT", "INTEGER", 
			"FLOAT", "STRING", "BOOL", "NULL", "ENDLINE", "ENDBLOCK", "WS", "COMMENT", 
			"NL", "IDENTIFIER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	private DenterHelper denter;
	  
	public override IToken NextToken()
	{
	    if (denter == null)
	    {
	        denter = DenterHelper.Builder()
	            .Nl(NL)
	            .Indent(BldItParser.INDENT)
	            .Dedent(BldItParser.DEDENT)
	            .PullToken(base.NextToken);
	    }

	    return denter.NextToken();
	}


	public BldItLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BldItLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000#\u00e7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0003\u0006Y\b\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0003"+
		"\u0014\u007f\b\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0003\u0015\u0086\b\u0015\u0001\u0016\u0004\u0016\u0089\b\u0016"+
		"\u000b\u0016\f\u0016\u008a\u0001\u0017\u0004\u0017\u008e\b\u0017\u000b"+
		"\u0017\f\u0017\u008f\u0001\u0017\u0001\u0017\u0004\u0017\u0094\b\u0017"+
		"\u000b\u0017\f\u0017\u0095\u0001\u0018\u0001\u0018\u0005\u0018\u009a\b"+
		"\u0018\n\u0018\f\u0018\u009d\t\u0018\u0001\u0018\u0001\u0018\u0001\u0018"+
		"\u0005\u0018\u00a2\b\u0018\n\u0018\f\u0018\u00a5\t\u0018\u0001\u0018\u0003"+
		"\u0018\u00a8\b\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0003\u0019\u00b3"+
		"\b\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0004\u001d\u00c1\b\u001d\u000b\u001d\f\u001d\u00c2\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0005\u001e"+
		"\u00cb\b\u001e\n\u001e\f\u001e\u00ce\t\u001e\u0001\u001e\u0003\u001e\u00d1"+
		"\b\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0003"+
		"\u001f\u00d8\b\u001f\u0001\u001f\u0001\u001f\u0005\u001f\u00dc\b\u001f"+
		"\n\u001f\f\u001f\u00df\t\u001f\u0001 \u0001 \u0005 \u00e3\b \n \f \u00e6"+
		"\t \u0001\u00cc\u0000!\u0001\u0003\u0003\u0004\u0005\u0005\u0007\u0006"+
		"\t\u0007\u000b\b\r\t\u000f\n\u0011\u000b\u0013\f\u0015\r\u0017\u000e\u0019"+
		"\u000f\u001b\u0010\u001d\u0011\u001f\u0012!\u0013#\u0014%\u0015\'\u0016"+
		")\u0017+\u0018-\u0019/\u001a1\u001b3\u001c5\u001d7\u001e9\u001f; =!?\""+
		"A#\u0001\u0000\u0006\u0001\u000009\u0001\u0000\"\"\u0001\u0000\'\'\u0003"+
		"\u0000\n\n\r\r  \u0003\u0000AZ__az\u0004\u000009AZ__az\u00f6\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0001"+
		"C\u0001\u0000\u0000\u0000\u0003I\u0001\u0000\u0000\u0000\u0005K\u0001"+
		"\u0000\u0000\u0000\u0007M\u0001\u0000\u0000\u0000\tO\u0001\u0000\u0000"+
		"\u0000\u000bQ\u0001\u0000\u0000\u0000\rX\u0001\u0000\u0000\u0000\u000f"+
		"Z\u0001\u0000\u0000\u0000\u0011\\\u0001\u0000\u0000\u0000\u0013^\u0001"+
		"\u0000\u0000\u0000\u0015a\u0001\u0000\u0000\u0000\u0017d\u0001\u0000\u0000"+
		"\u0000\u0019f\u0001\u0000\u0000\u0000\u001bh\u0001\u0000\u0000\u0000\u001d"+
		"j\u0001\u0000\u0000\u0000\u001fl\u0001\u0000\u0000\u0000!n\u0001\u0000"+
		"\u0000\u0000#p\u0001\u0000\u0000\u0000%r\u0001\u0000\u0000\u0000\'u\u0001"+
		"\u0000\u0000\u0000)~\u0001\u0000\u0000\u0000+\u0085\u0001\u0000\u0000"+
		"\u0000-\u0088\u0001\u0000\u0000\u0000/\u008d\u0001\u0000\u0000\u00001"+
		"\u00a7\u0001\u0000\u0000\u00003\u00b2\u0001\u0000\u0000\u00005\u00b4\u0001"+
		"\u0000\u0000\u00007\u00b9\u0001\u0000\u0000\u00009\u00bb\u0001\u0000\u0000"+
		"\u0000;\u00c0\u0001\u0000\u0000\u0000=\u00c6\u0001\u0000\u0000\u0000?"+
		"\u00d7\u0001\u0000\u0000\u0000A\u00e0\u0001\u0000\u0000\u0000CD\u0005"+
		"w\u0000\u0000DE\u0005h\u0000\u0000EF\u0005i\u0000\u0000FG\u0005l\u0000"+
		"\u0000GH\u0005e\u0000\u0000H\u0002\u0001\u0000\u0000\u0000IJ\u0005+\u0000"+
		"\u0000J\u0004\u0001\u0000\u0000\u0000KL\u0005-\u0000\u0000L\u0006\u0001"+
		"\u0000\u0000\u0000MN\u0005*\u0000\u0000N\b\u0001\u0000\u0000\u0000OP\u0005"+
		"/\u0000\u0000P\n\u0001\u0000\u0000\u0000QR\u0005%\u0000\u0000R\f\u0001"+
		"\u0000\u0000\u0000ST\u0005a\u0000\u0000TU\u0005n\u0000\u0000UY\u0005d"+
		"\u0000\u0000VW\u0005o\u0000\u0000WY\u0005r\u0000\u0000XS\u0001\u0000\u0000"+
		"\u0000XV\u0001\u0000\u0000\u0000Y\u000e\u0001\u0000\u0000\u0000Z[\u0005"+
		">\u0000\u0000[\u0010\u0001\u0000\u0000\u0000\\]\u0005<\u0000\u0000]\u0012"+
		"\u0001\u0000\u0000\u0000^_\u0005>\u0000\u0000_`\u0005=\u0000\u0000`\u0014"+
		"\u0001\u0000\u0000\u0000ab\u0005<\u0000\u0000bc\u0005=\u0000\u0000c\u0016"+
		"\u0001\u0000\u0000\u0000de\u0005(\u0000\u0000e\u0018\u0001\u0000\u0000"+
		"\u0000fg\u0005)\u0000\u0000g\u001a\u0001\u0000\u0000\u0000hi\u0005,\u0000"+
		"\u0000i\u001c\u0001\u0000\u0000\u0000jk\u0005;\u0000\u0000k\u001e\u0001"+
		"\u0000\u0000\u0000lm\u0005:\u0000\u0000m \u0001\u0000\u0000\u0000no\u0005"+
		".\u0000\u0000o\"\u0001\u0000\u0000\u0000pq\u0005=\u0000\u0000q$\u0001"+
		"\u0000\u0000\u0000rs\u0005i\u0000\u0000st\u0005f\u0000\u0000t&\u0001\u0000"+
		"\u0000\u0000uv\u0005e\u0000\u0000vw\u0005l\u0000\u0000wx\u0005s\u0000"+
		"\u0000xy\u0005e\u0000\u0000y(\u0001\u0000\u0000\u0000z{\u0005=\u0000\u0000"+
		"{\u007f\u0005=\u0000\u0000|}\u0005!\u0000\u0000}\u007f\u0005=\u0000\u0000"+
		"~z\u0001\u0000\u0000\u0000~|\u0001\u0000\u0000\u0000\u007f*\u0001\u0000"+
		"\u0000\u0000\u0080\u0081\u0005n\u0000\u0000\u0081\u0082\u0005o\u0000\u0000"+
		"\u0082\u0083\u0005t\u0000\u0000\u0083\u0086\u0005 \u0000\u0000\u0084\u0086"+
		"\u0005!\u0000\u0000\u0085\u0080\u0001\u0000\u0000\u0000\u0085\u0084\u0001"+
		"\u0000\u0000\u0000\u0086,\u0001\u0000\u0000\u0000\u0087\u0089\u0007\u0000"+
		"\u0000\u0000\u0088\u0087\u0001\u0000\u0000\u0000\u0089\u008a\u0001\u0000"+
		"\u0000\u0000\u008a\u0088\u0001\u0000\u0000\u0000\u008a\u008b\u0001\u0000"+
		"\u0000\u0000\u008b.\u0001\u0000\u0000\u0000\u008c\u008e\u0007\u0000\u0000"+
		"\u0000\u008d\u008c\u0001\u0000\u0000\u0000\u008e\u008f\u0001\u0000\u0000"+
		"\u0000\u008f\u008d\u0001\u0000\u0000\u0000\u008f\u0090\u0001\u0000\u0000"+
		"\u0000\u0090\u0091\u0001\u0000\u0000\u0000\u0091\u0093\u0005.\u0000\u0000"+
		"\u0092\u0094\u0007\u0000\u0000\u0000\u0093\u0092\u0001\u0000\u0000\u0000"+
		"\u0094\u0095\u0001\u0000\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000"+
		"\u0095\u0096\u0001\u0000\u0000\u0000\u00960\u0001\u0000\u0000\u0000\u0097"+
		"\u009b\u0005\"\u0000\u0000\u0098\u009a\b\u0001\u0000\u0000\u0099\u0098"+
		"\u0001\u0000\u0000\u0000\u009a\u009d\u0001\u0000\u0000\u0000\u009b\u0099"+
		"\u0001\u0000\u0000\u0000\u009b\u009c\u0001\u0000\u0000\u0000\u009c\u009e"+
		"\u0001\u0000\u0000\u0000\u009d\u009b\u0001\u0000\u0000\u0000\u009e\u00a8"+
		"\u0005\"\u0000\u0000\u009f\u00a3\u0005\'\u0000\u0000\u00a0\u00a2\b\u0002"+
		"\u0000\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a5\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001\u0000"+
		"\u0000\u0000\u00a4\u00a6\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a8\u0005\'\u0000\u0000\u00a7\u0097\u0001\u0000\u0000"+
		"\u0000\u00a7\u009f\u0001\u0000\u0000\u0000\u00a82\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0005t\u0000\u0000\u00aa\u00ab\u0005r\u0000\u0000\u00ab\u00ac"+
		"\u0005u\u0000\u0000\u00ac\u00b3\u0005e\u0000\u0000\u00ad\u00ae\u0005f"+
		"\u0000\u0000\u00ae\u00af\u0005a\u0000\u0000\u00af\u00b0\u0005l\u0000\u0000"+
		"\u00b0\u00b1\u0005s\u0000\u0000\u00b1\u00b3\u0005e\u0000\u0000\u00b2\u00a9"+
		"\u0001\u0000\u0000\u0000\u00b2\u00ad\u0001\u0000\u0000\u0000\u00b34\u0001"+
		"\u0000\u0000\u0000\u00b4\u00b5\u0005n\u0000\u0000\u00b5\u00b6\u0005u\u0000"+
		"\u0000\u00b6\u00b7\u0005l\u0000\u0000\u00b7\u00b8\u0005l\u0000\u0000\u00b8"+
		"6\u0001\u0000\u0000\u0000\u00b9\u00ba\u0003\u001d\u000e\u0000\u00ba8\u0001"+
		"\u0000\u0000\u0000\u00bb\u00bc\u0005e\u0000\u0000\u00bc\u00bd\u0005n\u0000"+
		"\u0000\u00bd\u00be\u0005d\u0000\u0000\u00be:\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c1\u0007\u0003\u0000\u0000\u00c0\u00bf\u0001\u0000\u0000\u0000\u00c1"+
		"\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c0\u0001\u0000\u0000\u0000\u00c2"+
		"\u00c3\u0001\u0000\u0000\u0000\u00c3\u00c4\u0001\u0000\u0000\u0000\u00c4"+
		"\u00c5\u0006\u001d\u0000\u0000\u00c5<\u0001\u0000\u0000\u0000\u00c6\u00c7"+
		"\u0005/\u0000\u0000\u00c7\u00c8\u0005/\u0000\u0000\u00c8\u00cc\u0001\u0000"+
		"\u0000\u0000\u00c9\u00cb\t\u0000\u0000\u0000\u00ca\u00c9\u0001\u0000\u0000"+
		"\u0000\u00cb\u00ce\u0001\u0000\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000"+
		"\u0000\u00cc\u00ca\u0001\u0000\u0000\u0000\u00cd\u00d0\u0001\u0000\u0000"+
		"\u0000\u00ce\u00cc\u0001\u0000\u0000\u0000\u00cf\u00d1\u0005\r\u0000\u0000"+
		"\u00d0\u00cf\u0001\u0000\u0000\u0000\u00d0\u00d1\u0001\u0000\u0000\u0000"+
		"\u00d1\u00d2\u0001\u0000\u0000\u0000\u00d2\u00d3\u0005\n\u0000\u0000\u00d3"+
		"\u00d4\u0001\u0000\u0000\u0000\u00d4\u00d5\u0006\u001e\u0000\u0000\u00d5"+
		">\u0001\u0000\u0000\u0000\u00d6\u00d8\u0005\r\u0000\u0000\u00d7\u00d6"+
		"\u0001\u0000\u0000\u0000\u00d7\u00d8\u0001\u0000\u0000\u0000\u00d8\u00d9"+
		"\u0001\u0000\u0000\u0000\u00d9\u00dd\u0005\n\u0000\u0000\u00da\u00dc\u0005"+
		" \u0000\u0000\u00db\u00da\u0001\u0000\u0000\u0000\u00dc\u00df\u0001\u0000"+
		"\u0000\u0000\u00dd\u00db\u0001\u0000\u0000\u0000\u00dd\u00de\u0001\u0000"+
		"\u0000\u0000\u00de@\u0001\u0000\u0000\u0000\u00df\u00dd\u0001\u0000\u0000"+
		"\u0000\u00e0\u00e4\u0007\u0004\u0000\u0000\u00e1\u00e3\u0007\u0005\u0000"+
		"\u0000\u00e2\u00e1\u0001\u0000\u0000\u0000\u00e3\u00e6\u0001\u0000\u0000"+
		"\u0000\u00e4\u00e2\u0001\u0000\u0000\u0000\u00e4\u00e5\u0001\u0000\u0000"+
		"\u0000\u00e5B\u0001\u0000\u0000\u0000\u00e6\u00e4\u0001\u0000\u0000\u0000"+
		"\u0011\u0000X~\u0085\u008a\u008f\u0095\u009b\u00a3\u00a7\u00b2\u00c2\u00cc"+
		"\u00d0\u00d7\u00dd\u00e4\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}